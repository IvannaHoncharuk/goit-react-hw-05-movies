{"version":3,"file":"static/js/804.2419b9df.chunk.js","mappings":"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","sources":["components/Box.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesGallery/MoviesGallery.styled.js","components/MoviesGallery/MoviesGallery.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Input/Input.styled.js","components/Input/Input.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const ImageWrapper = styled.div`\n  display: block;\n  height: 351px;\n`;\n\nexport const ContentWrapper = styled.div`\n  padding: 15px;\n  p:first-child {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Rating = styled.span`\n  padding: 5px;\n  background-color: ${({ rating }) => {\n    if (rating > 6) {\n      return '#6c3';\n    }\n    if (rating >= 4 && rating <= 6) {\n      return '#fc3';\n    }\n    return '#f00';\n  }};\n  border-radius: 10px;\n  color: ${({ rating }) => (rating >= 4 && rating <= 6 ? 'black' : 'white')};\n`;","import PropTypes from 'prop-types';\nimport {\n  Image,\n  ImageWrapper,\n  ContentWrapper,\n  Rating,\n} from './MovieCard.styled';\n\nconst MovieCard = ({ movie: { title, poster_path, vote_average: rating } }) => {\n  return (\n    <>\n      <ImageWrapper>\n        <Image\n          src={\n            poster_path\n              ? 'https://image.tmdb.org/t/p/w500' + poster_path\n              : 'https://dummyimage.com/216x361/000/fff&text=No+poster'\n          }\n          alt={title}\n        />\n      </ImageWrapper>\n      <ContentWrapper>\n        <p>{title}</p>\n        <p>\n          Rating:{' '}\n          <Rating rating={rating.toFixed(2)}>{rating.toFixed(2)}</Rating>\n        </p>\n      </ContentWrapper>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n  }).isRequired,\n};\n\nexport default MovieCard;","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Card = styled(Link)`\n  display: block;\n  text-decoration: none;\n  height: 100%;\n  border: 1px solid #61dafb;\n  border-radius: 10px;\n  overflow: hidden;\n  background-color: #282c34;\n  color: #61dafb;\n  box-shadow: 5px 5px 5px #282c34;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 10px 10px 10px #282c34;\n  }\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Box } from 'components/Box';\nimport MovieCard from '../MovieCard/MovieCard';\nimport { Card } from './MoviesGallery.styled';\n\nconst MoviesGallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Box\n      as=\"ul\"\n      display=\"grid\"\n      gridTemplateColumns=\"repeat(5, 1fr)\"\n      gridGap=\"20px\"\n      gridAutoRows=\"auto\"\n    >\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Card to={`/movies/${movie.id}`} state={{ from: location }}>\n            <MovieCard movie={movie} />\n          </Card>\n        </li>\n      ))}\n    </Box>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MoviesGallery;","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding: 30px 0;\n`;","import PropTypes from 'prop-types';\nimport { StyledSection } from './Section.styled';\n\nconst Section = ({ children }) => {\n  return <StyledSection>{children}</StyledSection>;\n};\n\nSection.protoType = {\n  children: PropTypes.element,\n};\n\nexport default Section;","import styled from 'styled-components';\n\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 10px;\n  max-width: 300px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Error = styled.p`\n  margin-bottom: 15px;\n  color: red;\n`;","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { getFetchSearchMovies } from 'services/api';\nimport { ImSearch } from 'react-icons/im';\n\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n  Error,\n} from './Input.styled';\n\nconst Input = ({ setMovies }) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({ defaultValues: { search: '' } });\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchValue, setSearchValue] = useState(\n    () => searchParams.get('query') ?? ''\n  );\n\n  const onSubmit = ({ search }) => {\n    setSearchValue(search);\n    setSearchParams({ query: search });\n    reset();\n  };\n\n  useEffect(() => {\n    if (!searchValue) {\n      return;\n    }\n\n    (async () => {\n      const foundMovies = await getFetchSearchMovies(searchValue);\n      setMovies(foundMovies);\n    })();\n  }, [searchValue, setMovies]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <SearchFormButton type=\"submit\">\n          <ImSearch/>\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n        </SearchFormButton>\n        <SearchFormInput\n          {...register('search', { required: 'This field is required' })}\n          placeholder=\"Search movie by name\"\n          autoFocus\n        />\n      </SearchForm>\n      <Error>{errors.search?.message}</Error>\n    </>\n  );\n};\n\nInput.propTypes = {\n  setMovies: PropTypes.func.isRequired,\n};\n\nexport default Input;","import { useState } from 'react';\nimport MoviesGallery from 'components/MoviesGallery/MoviesGallery';\nimport Section from 'components/Section/Section';\nimport Input from 'components/Input/Input';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  return (\n    <Section>\n      <Input setMovies={setMovies} />\n      {movies && <MoviesGallery movies={movies} />}\n    </Section>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'e1ec3202cd0dd1da652adfbc8dc32822';\n\nexport const getFetchTrending = async () => {\n  const response = await axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getFetchSearchMovies = async query => {\n  const response = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n      query,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getFetchMovieDetails = async movieId => {\n  const response = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getFetchMovieCast = async movieId => {\n  const response = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getFetchMovieReviews = async movieId => {\n  const response = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","Image","ImageWrapper","ContentWrapper","Rating","rating","movie","title","poster_path","vote_average","src","alt","toFixed","Card","Link","movies","location","useLocation","as","display","gridTemplateColumns","gridGap","gridAutoRows","map","to","id","state","from","StyledSection","Section","children","protoType","PropTypes","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","Error","setMovies","useForm","defaultValues","search","register","handleSubmit","reset","errors","formState","useSearchParams","searchParams","setSearchParams","useState","get","searchValue","setSearchValue","useEffect","getFetchSearchMovies","foundMovies","onSubmit","query","autoComplete","type","required","placeholder","autoFocus","message","MoviesGallery","axios","KEY","getFetchTrending","params","api_key","response","data","results","include_adult","getFetchMovieDetails","movieId","getFetchMovieCast","getFetchMovieReviews"],"sourceRoot":""}